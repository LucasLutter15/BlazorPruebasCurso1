@page "/actores/editar/{ActorId:int}"
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject SweetAlertService swal


<h3>Editar Actores</h3>


    @if (Actor is null)
    {
    <p>Cargando...</p>
}
else
{
    <FormularioActores OnValidSubmit="Editar" Actor="Actor" />
}


@code {
    [Parameter] public int ActorId { get; set; }
    private Actor? Actor;

    protected override async Task OnInitializedAsync()
    {
        var respuestaHTTP = await repositorio.Get<Actor>($"api/actores/{ActorId}");

        if (respuestaHTTP.Error)
        {
            if (respuestaHTTP.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("actores");
            }
            else
            {
                var errorMensaje = await respuestaHTTP.ObtenerMensajeError();
                await swal.FireAsync("ERROR", errorMensaje, SweetAlertIcon.Error);
            }
        }
        else
        {
            Actor = respuestaHTTP.Response;
        }
    }

    private async Task Editar()
    {
        var respuestaHTTP = await repositorio.Put("api/actores", Actor);

        if (respuestaHTTP.Error)
        {
            var mensajeError = await respuestaHTTP.ObtenerMensajeError();
            await swal.FireAsync("ERROR", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            navigationManager.NavigateTo("actores");
        }
    }
}
